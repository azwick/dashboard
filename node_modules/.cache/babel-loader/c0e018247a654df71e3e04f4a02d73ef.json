{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/Anne/Documents/playground/dashboard/src/ChecklistNew.js\",\n    _s = $RefreshSig$();\n\nimport './Checklist.css';\nimport React, { useEffect, useState } from 'react';\nimport data from \"./data.json\";\n\nconst ChecklistNew = ({\n  title,\n  maxCount\n}) => {\n  _s();\n\n  const [toDos, setToDos] = useState(data);\n  const [count, setCount] = useState(toDos.length);\n  useEffect(() => {\n    let counter = setCount(toDos.length);\n    return function cleanup() {\n      clearInterval(counter);\n    };\n  }, []);\n\n  const handleToggle = e => {\n    e.preventDefault();\n    let mapped = toDos.map(item => {\n      return item.id === Number(e.currentTarget.parentNode.id) ? { ...item,\n        complete: !item.complete\n      } : { ...item\n      };\n    });\n    setToDos(mapped);\n  };\n\n  const handleDeletion = e => {\n    e.preventDefault();\n    let filteredList = toDos.filter(item => {\n      return item.id !== Number(e.currentTarget.parentNode.id);\n    });\n    setToDos(filteredList);\n    setCount(count - 1); // Right place?\n  };\n\n  const addItem = newItem => {\n    setToDos([...toDos, newItem]);\n  }; // New item\n\n\n  const [itemValue, setItemValue] = useState(\"\");\n  const [isConfirmed, setConfirm] = useState(false);\n\n  const handleChange = e => {\n    setItemValue(e.target.value);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    setConfirm(!isConfirmed);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"checklist\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"title\",\n      children: [title, \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"counter\",\n        children: [count, \" von \", maxCount]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"list\",\n      children: toDos.map(item => {\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          id: item.id,\n          className: \"item\",\n          children: [!isConfirmed ? /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: handleSubmit,\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              onChange: handleChange,\n              value: itemValue,\n              placeholder: \"Bezeichnung...\",\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            onClick: handleToggle,\n            className: item.complete ? 'done' : '',\n            children: item.content\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            onClick: handleDeletion,\n            className: \"delete\",\n            children: \"\\u2717\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 15\n          }, this)]\n        }, item.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), count < maxCount && /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: addItem,\n      children: \"+\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ChecklistNew, \"kGYAJcKJviMZR9l/IMFdRNiHr/Y=\");\n\n_c = ChecklistNew;\nexport default ChecklistNew;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChecklistNew\");","map":{"version":3,"sources":["/Users/Anne/Documents/playground/dashboard/src/ChecklistNew.js"],"names":["React","useEffect","useState","data","ChecklistNew","title","maxCount","toDos","setToDos","count","setCount","length","counter","cleanup","clearInterval","handleToggle","e","preventDefault","mapped","map","item","id","Number","currentTarget","parentNode","complete","handleDeletion","filteredList","filter","addItem","newItem","itemValue","setItemValue","isConfirmed","setConfirm","handleChange","target","value","handleSubmit","content"],"mappings":";;;;;AAAA,OAAO,iBAAP;AAEA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AAEA,OAAOC,IAAP,MAAiB,aAAjB;;AAEA,MAAMC,YAAY,GAAG,CAAC;AAACC,EAAAA,KAAD;AAAQC,EAAAA;AAAR,CAAD,KAAuB;AAAA;;AAC1C,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAACC,IAAD,CAAlC;AACA,QAAM,CAACM,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,CAACK,KAAK,CAACI,MAAP,CAAlC;AAEAV,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIW,OAAO,GAAGF,QAAQ,CAACH,KAAK,CAACI,MAAP,CAAtB;AAEA,WAAO,SAASE,OAAT,GAAmB;AACxBC,MAAAA,aAAa,CAACF,OAAD,CAAb;AACD,KAFD;AAGD,GANQ,EAMN,EANM,CAAT;;AAQA,QAAMG,YAAY,GAAIC,CAAD,IAAO;AACxBA,IAAAA,CAAC,CAACC,cAAF;AAEA,QAAIC,MAAM,GAAGX,KAAK,CAACY,GAAN,CAAUC,IAAI,IAAI;AAC7B,aAAQA,IAAI,CAACC,EAAL,KAAYC,MAAM,CAACN,CAAC,CAACO,aAAF,CAAgBC,UAAhB,CAA2BH,EAA5B,CAAlB,GAAoD,EAAE,GAAGD,IAAL;AAAWK,QAAAA,QAAQ,EAAE,CAACL,IAAI,CAACK;AAA3B,OAApD,GAA4F,EAAE,GAAGL;AAAL,OAApG;AACD,KAFY,CAAb;AAGAZ,IAAAA,QAAQ,CAACU,MAAD,CAAR;AACH,GAPD;;AASA,QAAMQ,cAAc,GAAIV,CAAD,IAAO;AAC1BA,IAAAA,CAAC,CAACC,cAAF;AAEA,QAAIU,YAAY,GAAGpB,KAAK,CAACqB,MAAN,CAAaR,IAAI,IAAI;AACtC,aAAQA,IAAI,CAACC,EAAL,KAAYC,MAAM,CAACN,CAAC,CAACO,aAAF,CAAgBC,UAAhB,CAA2BH,EAA5B,CAA1B;AACD,KAFkB,CAAnB;AAGAb,IAAAA,QAAQ,CAACmB,YAAD,CAAR;AACAjB,IAAAA,QAAQ,CAACD,KAAK,GAAG,CAAT,CAAR,CAP0B,CAOL;AACxB,GARD;;AAUA,QAAMoB,OAAO,GAAIC,OAAD,IAAa;AAC3BtB,IAAAA,QAAQ,CAAC,CAAC,GAAGD,KAAJ,EAAWuB,OAAX,CAAD,CAAR;AACD,GAFD,CA/B0C,CAmC1C;;;AAEA,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4B9B,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM,CAAC+B,WAAD,EAAcC,UAAd,IAA4BhC,QAAQ,CAAC,KAAD,CAA1C;;AAEA,QAAMiC,YAAY,GAAInB,CAAD,IAAO;AAC1BgB,IAAAA,YAAY,CAAChB,CAAC,CAACoB,MAAF,CAASC,KAAV,CAAZ;AACD,GAFD;;AAIA,QAAMC,YAAY,GAAItB,CAAD,IAAO;AAC1BA,IAAAA,CAAC,CAACC,cAAF;AACAiB,IAAAA,UAAU,CAAC,CAACD,WAAF,CAAV;AACD,GAHD;;AAKA,sBACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,4BACE;AAAI,MAAA,SAAS,EAAC,OAAd;AAAA,iBACG5B,KADH,oBACU;AAAM,QAAA,SAAS,EAAC,SAAhB;AAAA,mBAA2BI,KAA3B,WAAuCH,QAAvC;AAAA;AAAA;AAAA;AAAA;AAAA,cADV;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAIE;AAAI,MAAA,SAAS,EAAC,MAAd;AAAA,gBACGC,KAAK,CAACY,GAAN,CAAWC,IAAD,IAAU;AACnB,4BACE;AAAkB,UAAA,EAAE,EAAEA,IAAI,CAACC,EAA3B;AAA+B,UAAA,SAAS,EAAC,MAAzC;AAAA,qBACG,CAACY,WAAD,gBACC;AAAM,YAAA,QAAQ,EAAEK,YAAhB;AAAA,mCACE;AACE,cAAA,IAAI,EAAC,MADP;AAEE,cAAA,QAAQ,EAAEH,YAFZ;AAGE,cAAA,KAAK,EAAEJ,SAHT;AAIE,cAAA,WAAW,EAAC,gBAJd;AAKE,cAAA,QAAQ;AALV;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBADD,gBAWC;AAAK,YAAA,OAAO,EAAEhB,YAAd;AAA4B,YAAA,SAAS,EAAEK,IAAI,CAACK,QAAL,GAAgB,MAAhB,GAAyB,EAAhE;AAAA,sBAAqEL,IAAI,CAACmB;AAA1E;AAAA;AAAA;AAAA;AAAA,kBAZJ,eAeE;AAAM,YAAA,OAAO,EAAEb,cAAf;AAA+B,YAAA,SAAS,EAAC,QAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAfF;AAAA,WAASN,IAAI,CAACC,EAAd;AAAA;AAAA;AAAA;AAAA,gBADF;AAmBC,OApBF;AADH;AAAA;AAAA;AAAA;AAAA,YAJF,EA2BGZ,KAAK,GAAGH,QAAR,iBACC;AAAQ,MAAA,OAAO,EAAEuB,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YA5BJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAiCD,CAlFD;;GAAMzB,Y;;KAAAA,Y;AAoFN,eAAeA,YAAf","sourcesContent":["import './Checklist.css';\n\nimport React, {useEffect, useState} from 'react';\n\nimport data from \"./data.json\";\n\nconst ChecklistNew = ({title, maxCount}) => {\n  const [toDos, setToDos] = useState(data);\n  const [count, setCount] = useState(toDos.length);\n\n  useEffect(() => {\n    let counter = setCount(toDos.length);\n\n    return function cleanup() {\n      clearInterval(counter);\n    };\n  }, []);\n\n  const handleToggle = (e) => {\n      e.preventDefault()\n\n      let mapped = toDos.map(item => {\n        return (item.id === Number(e.currentTarget.parentNode.id) ? { ...item, complete: !item.complete } : { ...item});\n      });\n      setToDos(mapped);\n  }\n\n  const handleDeletion = (e) => {\n      e.preventDefault()\n\n      let filteredList = toDos.filter(item => {\n        return (item.id !== Number(e.currentTarget.parentNode.id));\n      });\n      setToDos(filteredList);\n      setCount(count - 1); // Right place?\n  }\n\n  const addItem = (newItem) => {\n    setToDos([...toDos, newItem]);\n  }\n\n  // New item\n\n  const [itemValue, setItemValue] = useState(\"\");\n  const [isConfirmed, setConfirm] = useState(false);\n  \n  const handleChange = (e) => {\n    setItemValue(e.target.value);\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    setConfirm(!isConfirmed);\n  }\n\n  return (\n    <div className=\"checklist\">\n      <h2 className=\"title\">\n        {title} <span className=\"counter\">{count} von {maxCount}</span>\n      </h2>\n      <ul className=\"list\">\n        {toDos.map((item) => {\n          return (\n            <li key={item.id} id={item.id} className=\"item\">\n              {!isConfirmed ? ( \n                <form onSubmit={handleSubmit}>\n                  <input \n                    type=\"text\" \n                    onChange={handleChange}\n                    value={itemValue} \n                    placeholder=\"Bezeichnung...\" \n                    required\n                  />\n                </form>\n              ) : (\n                <div onClick={handleToggle} className={item.complete ? 'done' : ''}>{item.content}</div>\n              )}\n\n              <span onClick={handleDeletion} className=\"delete\">âœ—</span>\n            </li>\n            )\n          })}\n      </ul>\n      {count < maxCount &&\n        <button onClick={addItem}>+</button>\n      } \n    </div>\n  );\n}\n\nexport default ChecklistNew;\n"]},"metadata":{},"sourceType":"module"}