{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/Anne/Documents/playground/dashboard/src/ChecklistNew.js\",\n    _s = $RefreshSig$();\n\nimport './Checklist.css';\nimport React, { useEffect, useState } from 'react';\nimport data from \"./data.json\"; //\n// Counter.jsx\n//\n\nconst Counter = ({\n  count,\n  maxCount\n}) => /*#__PURE__*/_jsxDEV(\"span\", {\n  className: \"counter\",\n  children: `${count} von ${maxCount}`\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 12,\n  columnNumber: 3\n}, this); //\n// ChecklistNew.jsx\n//\n\n\n_c = Counter;\n\nconst ChecklistNew = ({\n  title,\n  maxCount\n}) => {\n  _s();\n\n  const [items, setItem] = useState(data);\n\n  const addItem = newItem => {\n    setItem([...items, newItem]);\n  };\n\n  const [count, setCount] = useState(items.length);\n  useEffect(() => {\n    let counter = setCount(items.length);\n    return function cleanup() {\n      clearInterval(counter);\n    };\n  }, []); //\n  // const toggleState = () => {\n  //   setDone(!done);\n  // }\n  // const handleMyClick = (e) => {\n  //   e.preventDefault()\n  //   handleDeletion(e.currentTarget.parentNode.id)\n  // }\n\n  const [done, setDone] = useState(data);\n\n  const handleToggle = e => {\n    e.preventDefault();\n    let mapped = done.map(item => {\n      return item.id === Number(e.currentTarget.parentNode.id) ? { ...item,\n        complete: !item.complete\n      } : { ...item\n      };\n    });\n    setDone(mapped);\n  }; // const handleDeletion = (id) => {\n  //   let updateList = items.filter((item) => item.id !== id);\n  //   setItem([updateList]);\n  //   console.log([updateList]);\n  // }\n\n\n  const handleDeletion = e => {\n    e.preventDefault();\n    let filteredList = done.filter(item => {\n      return item.id === Number(e.currentTarget.parentNode.id) ? { ...item,\n        id: !item.id\n      } : { ...item\n      };\n    });\n    setDone(filteredList);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"checklist\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"title\",\n      children: [title, \" \", /*#__PURE__*/_jsxDEV(Counter, {\n        count: count,\n        maxCount: maxCount\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"list\",\n      children: done.map(item => {\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          id: item.id,\n          className: \"item\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            onClick: handleToggle,\n            className: item.complete ? 'done' : '',\n            children: item.content\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            onClick: handleDeletion,\n            className: \"delete\",\n            children: \"\\u2717\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 17\n          }, this)]\n        }, item.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 15\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }, this), count < maxCount && /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: addItem,\n      children: \"+\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ChecklistNew, \"vnISGLEzScczAynkiGN1KD9z1Bc=\");\n\n_c2 = ChecklistNew;\nexport default ChecklistNew;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Counter\");\n$RefreshReg$(_c2, \"ChecklistNew\");","map":{"version":3,"sources":["/Users/Anne/Documents/playground/dashboard/src/ChecklistNew.js"],"names":["React","useEffect","useState","data","Counter","count","maxCount","ChecklistNew","title","items","setItem","addItem","newItem","setCount","length","counter","cleanup","clearInterval","done","setDone","handleToggle","e","preventDefault","mapped","map","item","id","Number","currentTarget","parentNode","complete","handleDeletion","filteredList","filter","content"],"mappings":"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","sourcesContent":["import './Checklist.css';\n\nimport React, {useEffect, useState} from 'react';\n\nimport data from \"./data.json\";\n\n\n//\n// Counter.jsx\n//\nconst Counter = ({count, maxCount}) => (\n  <span className=\"counter\">{`${count} von ${maxCount}`}</span>\n)\n\n//\n// ChecklistNew.jsx\n//\nconst ChecklistNew = ({title, maxCount}) => {\n  const [items, setItem] = useState(data);\n\n  const addItem = (newItem) => {\n    setItem([...items, newItem]);\n  }\n\n  const [count, setCount] = useState(items.length);\n\n  useEffect(() => {\n    let counter = setCount(items.length);\n\n    return function cleanup() {\n      clearInterval(counter);\n    };\n  }, []);\n\n//\n\n\n  // const toggleState = () => {\n  //   setDone(!done);\n  // }\n\n  // const handleMyClick = (e) => {\n  //   e.preventDefault()\n  //   handleDeletion(e.currentTarget.parentNode.id)\n  // }\n\n  const [done, setDone] = useState(data);\n\n  const handleToggle = (e) => {\n      e.preventDefault()\n\n      let mapped = done.map(item => {\n        return (item.id === Number(e.currentTarget.parentNode.id) ? { ...item, complete: !item.complete } : { ...item});\n      });\n      setDone(mapped);\n  }\n\n  // const handleDeletion = (id) => {\n  //   let updateList = items.filter((item) => item.id !== id);\n  //   setItem([updateList]);\n  //   console.log([updateList]);\n  // }\n\n  const handleDeletion = (e) => {\n      e.preventDefault()\n\n      let filteredList = done.filter(item => {\n        return (item.id === Number(e.currentTarget.parentNode.id) ? { ...item, id: !item.id } : { ...item});\n      });\n      setDone(filteredList);\n  }\n\n  return (\n    <div className=\"checklist\">\n      <h2 className=\"title\">\n        {title} <Counter count={count} maxCount={maxCount}/>\n      </h2>\n\n        <ul className=\"list\">\n\n          {done.map((item) => {\n\n            return (\n              <li key={item.id} id={item.id} className=\"item\">\n                <div onClick={handleToggle} className={item.complete ? 'done' : ''}>{item.content}</div>\n                <span onClick={handleDeletion} className=\"delete\">âœ—</span>\n              </li>\n              )\n            })}\n\n        </ul>\n\n\n      {count < maxCount &&\n        <button onClick={addItem}>+</button>\n      } \n    </div>\n  );\n}\n\nexport default ChecklistNew;\n"]},"metadata":{},"sourceType":"module"}