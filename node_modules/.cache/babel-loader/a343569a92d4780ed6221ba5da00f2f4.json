{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/Anne/Documents/playground/dashboard/src/Checklist/Checklist.js\",\n    _s = $RefreshSig$();\n\nimport './Checklist.css';\nimport React, { useEffect, useState } from 'react';\nimport data from \"./data.json\";\n\nconst Checklist = ({\n  title,\n  maxCount\n}) => {\n  _s();\n\n  const [toDos, setToDos] = useState(data);\n  const [count, setCount] = useState(toDos.length);\n  useEffect(() => {\n    let counter = setCount(toDos.length);\n    return function cleanup() {\n      clearInterval(counter);\n    };\n  }, []);\n\n  const handleToggle = e => {\n    e.preventDefault();\n    let mapped = toDos.map(item => {\n      return item.id === Number(e.currentTarget.parentNode.id) ? { ...item,\n        complete: !item.complete\n      } : { ...item\n      };\n    });\n    setToDos(mapped);\n  };\n\n  const handleDeletion = e => {\n    e.preventDefault();\n    let filteredList = toDos.filter(item => {\n      return item.id !== Number(e.currentTarget.parentNode.id);\n    });\n    setToDos(filteredList);\n    setCount(count - 1);\n  };\n\n  const addItem = () => {\n    let copy = [...toDos];\n    const keyId = toDos.length + 1;\n    copy = [...copy, {\n      id: keyId,\n      content: null,\n      complete: false\n    }];\n    setToDos(copy);\n    setCount(count + 1);\n  };\n\n  const InputForm = () => {\n    const handleSubmit = () => {\n      console.log('Submit');\n    };\n\n    const handleChange = () => {\n      console.log('Change');\n    };\n\n    const userInput = () => {\n      'Hello world';\n    };\n\n    return /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        value: userInput,\n        type: \"text\",\n        onChange: handleChange,\n        placeholder: \"Write down your ToDo...\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"checklist\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"title\",\n      children: [title, \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"counter\",\n        children: [count, \" von \", maxCount]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"list\",\n      children: toDos.map(item => {\n        // const keyId = (toDoList.length + 1) + userInput.replace(/[^a-zA-Z0-9]/g,'');\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          id: item.id,\n          className: \"item\",\n          children: [item.content ? /*#__PURE__*/_jsxDEV(\"div\", {\n            onClick: handleToggle,\n            className: item.complete ? 'done' : '',\n            children: item.content\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 31\n          }, this) : /*#__PURE__*/_jsxDEV(InputForm, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 122\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            onClick: handleDeletion,\n            className: \"delete\",\n            children: \"\\u2717\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 15\n          }, this)]\n        }, item.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), count < maxCount && /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: addItem,\n      children: \"+\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Checklist, \"iX/6MAOzCs4dENBsfp1eVGQZX0E=\");\n\n_c = Checklist;\nexport default Checklist;\n\nvar _c;\n\n$RefreshReg$(_c, \"Checklist\");","map":{"version":3,"sources":["/Users/Anne/Documents/playground/dashboard/src/Checklist/Checklist.js"],"names":["React","useEffect","useState","data","Checklist","title","maxCount","toDos","setToDos","count","setCount","length","counter","cleanup","clearInterval","handleToggle","e","preventDefault","mapped","map","item","id","Number","currentTarget","parentNode","complete","handleDeletion","filteredList","filter","addItem","copy","keyId","content","InputForm","handleSubmit","console","log","handleChange","userInput"],"mappings":"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","sourcesContent":["import './Checklist.css';\n\nimport React, {useEffect, useState} from 'react';\n\nimport data from \"./data.json\";\n\nconst Checklist = ({title, maxCount}) => {\n  const [toDos, setToDos] = useState(data);\n  const [count, setCount] = useState(toDos.length);\n\n  useEffect(() => {\n    let counter = setCount(toDos.length);\n\n    return function cleanup() {\n      clearInterval(counter);\n    };\n  }, []);\n\n  const handleToggle = (e) => {\n      e.preventDefault()\n\n      let mapped = toDos.map(item => {\n        return (item.id === Number(e.currentTarget.parentNode.id) ? { ...item, complete: !item.complete } : { ...item});\n      });\n      setToDos(mapped);\n  }\n\n  const handleDeletion = (e) => {\n      e.preventDefault()\n\n      let filteredList = toDos.filter(item => {\n        return (item.id !== Number(e.currentTarget.parentNode.id));\n      });\n      setToDos(filteredList);\n      setCount(count - 1);\n  }\n\n  const addItem = () => {\n    let copy = [...toDos];\n    const keyId = (toDos.length + 1);\n    copy = [...copy, { id: keyId, content: null, complete: false }];\n    setToDos(copy);\n    setCount(count + 1);\n  }\n\n  const InputForm = () => {\n    const handleSubmit = () => {console.log('Submit')}\n    const handleChange = () => {console.log('Change')}\n    const userInput = () => {'Hello world'}\n\n    return (\n      <form onSubmit={handleSubmit}>\n          <input value={userInput} type=\"text\" onChange={handleChange} placeholder=\"Write down your ToDo...\" required/>\n      </form>\n    )\n  }\n\n  return (\n    <div className=\"checklist\">\n      <h2 className=\"title\">\n        {title} <span className=\"counter\">{count} von {maxCount}</span>\n      </h2>\n      <ul className=\"list\">\n        {toDos.map((item) => {\n          // const keyId = (toDoList.length + 1) + userInput.replace(/[^a-zA-Z0-9]/g,'');\n          return (\n            <li key={item.id} id={item.id} className=\"item\">\n              {item.content ? <div onClick={handleToggle} className={item.complete ? 'done' : ''}>{item.content}</div> : <InputForm/> }\n              <span onClick={handleDeletion} className=\"delete\">✗</span>\n            </li>\n            )\n          })}\n      </ul>\n      {count < maxCount &&\n        <button onClick={addItem}>+</button>\n      } \n    </div>\n  );\n}\n\nexport default Checklist;\n"]},"metadata":{},"sourceType":"module"}