{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/Anne/Documents/playground/dashboard/src/Checklist/Checklist.js\",\n    _s = $RefreshSig$();\n\nimport './Checklist.css';\nimport React, { useEffect, useState } from 'react';\nimport Item from './Item';\nimport data from \"./data.json\";\n\nconst Checklist = ({\n  title,\n  maxCount\n}) => {\n  _s();\n\n  // const [toDos, setToDos] = useState([]);\n  const [toDos, setToDos] = useState(data);\n  const [count, setCount] = useState(toDos.length);\n  useEffect(() => {\n    let counter = setCount(toDos.length);\n    return function cleanup() {\n      clearInterval(counter);\n    };\n  }, []);\n\n  const handleToggle = e => {\n    e.preventDefault();\n    let mapped = toDos.map(item => {\n      return item.id === e.currentTarget.parentNode.id ? { ...item,\n        complete: !item.complete\n      } : { ...item\n      };\n    });\n    setToDos(mapped);\n  };\n\n  const handleDeletion = e => {\n    e.preventDefault();\n    let filteredList = toDos.filter(item => {\n      return item.id !== e.currentTarget.parentNode.id;\n    });\n    setToDos(filteredList);\n    setCount(count - 1);\n  };\n\n  const addItem = () => {\n    const keyId = count + 1 + title.replace(/[^a-zA-Z0-9]/g, '');\n    const copyItem = [...toDos, {\n      id: keyId,\n      content: null,\n      complete: false\n    }];\n    setToDos(copyItem);\n    setCount(count + 1);\n  };\n\n  const updateItem = (userContent, e) => {\n    const newList = toDos.map(item => {\n      if (item.id === e.currentTarget.parentNode.id) {\n        const keyId = (count + title + userContent).replace(/[^a-zA-Z0-9]/g, '');\n        const updatedItem = { ...item,\n          id: keyId,\n          content: userContent\n        };\n        return updatedItem;\n      }\n\n      return item;\n    });\n    setToDos(newList);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"checklist\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"title\",\n      children: [title, \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"counter\",\n        children: [count, \" von \", maxCount]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), count > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"list\",\n      children: toDos.map(item => {\n        return /*#__PURE__*/_jsxDEV(Item, {\n          item: item,\n          handleToggle: handleToggle,\n          handleDeletion: handleDeletion,\n          updateItem: updateItem\n        }, item.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 17\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"emptyState\",\n      children: \"Add your first checklist item...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 10\n    }, this), count < maxCount && /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: addItem,\n      children: \"+\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Checklist, \"iX/6MAOzCs4dENBsfp1eVGQZX0E=\");\n\n_c = Checklist;\nexport default Checklist;\n\nvar _c;\n\n$RefreshReg$(_c, \"Checklist\");","map":{"version":3,"sources":["/Users/Anne/Documents/playground/dashboard/src/Checklist/Checklist.js"],"names":["React","useEffect","useState","Item","data","Checklist","title","maxCount","toDos","setToDos","count","setCount","length","counter","cleanup","clearInterval","handleToggle","e","preventDefault","mapped","map","item","id","currentTarget","parentNode","complete","handleDeletion","filteredList","filter","addItem","keyId","replace","copyItem","content","updateItem","userContent","newList","updatedItem"],"mappings":"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","sourcesContent":["import './Checklist.css';\n\nimport React, {useEffect, useState} from 'react';\n\nimport Item from './Item';\nimport data from \"./data.json\";\n\nconst Checklist = ({title, maxCount}) => {\n  // const [toDos, setToDos] = useState([]);\n  const [toDos, setToDos] = useState(data);\n  const [count, setCount] = useState(toDos.length);\n\n  useEffect(() => {\n    let counter = setCount(toDos.length);\n    return function cleanup() {\n      clearInterval(counter);\n    };\n  }, []);\n\n  const handleToggle = (e) => {\n      e.preventDefault()\n      let mapped = toDos.map(item => {\n        return (item.id === (e.currentTarget.parentNode.id) ? { ...item, complete: !item.complete } : { ...item});\n      });\n      setToDos(mapped);\n  }\n\n  const handleDeletion = (e) => {\n      e.preventDefault()\n      let filteredList = toDos.filter(item => {\n        return (item.id !== e.currentTarget.parentNode.id);\n      });\n      setToDos(filteredList);\n      setCount(count - 1);\n  }\n\n  const addItem = () => {\n    const keyId = ((count + 1) + title.replace(/[^a-zA-Z0-9]/g,''));\n    const copyItem = [...toDos, { id: keyId, content: null, complete: false }];\n    setToDos(copyItem);\n    setCount(count + 1);\n  }\n\n  const updateItem = (userContent, e) => {\n    const newList = toDos.map((item) => {\n      if (item.id === e.currentTarget.parentNode.id) {\n        const keyId = (count + title + userContent).replace(/[^a-zA-Z0-9]/g,'');\n        const updatedItem = {...item, id: keyId, content: userContent };\n        return updatedItem;\n      }\n      return item;\n    });\n    setToDos(newList);\n  }\n\n  return (\n    <div className=\"checklist\">\n      <h2 className=\"title\">\n        {title} <span className=\"counter\">{count} von {maxCount}</span>\n      </h2>\n      {(count > 0) ?\n        <ul className=\"list\">\n          {toDos.map((item) => {\n            return (\n                <Item key={item.id} item={item} handleToggle={handleToggle} handleDeletion={handleDeletion} updateItem={updateItem} />\n              )\n            })}\n        </ul>\n       : <div className=\"emptyState\">Add your first checklist item...</div> }\n      {count < maxCount &&\n        <button onClick={addItem}>+</button>\n      } \n    </div>\n  );\n}\n\nexport default Checklist;\n"]},"metadata":{},"sourceType":"module"}