{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/Anne/Documents/playground/dashboard/src/Checklist/Checklist.js\",\n    _s2 = $RefreshSig$();\n\nimport './Checklist.css';\nimport React, { useEffect, useState } from 'react';\nimport data from \"./data.json\";\n\nconst Checklist = ({\n  title,\n  maxCount\n}) => {\n  _s2();\n\n  var _s = $RefreshSig$();\n\n  const [toDos, setToDos] = useState(data);\n  const [count, setCount] = useState(toDos.length);\n  useEffect(() => {\n    let counter = setCount(toDos.length);\n    return function cleanup() {\n      clearInterval(counter);\n    };\n  }, []);\n\n  const handleToggle = e => {\n    e.preventDefault();\n    let mapped = toDos.map(item => {\n      return item.id == e.currentTarget.parentNode.id ? { ...item,\n        complete: !item.complete\n      } : { ...item\n      };\n    });\n    setToDos(mapped);\n  };\n\n  const handleDeletion = e => {\n    e.preventDefault();\n    let filteredList = toDos.filter(item => {\n      return item.id != e.currentTarget.parentNode.id;\n    });\n    setToDos(filteredList);\n    setCount(count - 1);\n  };\n\n  const [itemContent, setItemContent] = useState(null);\n\n  const addItem = () => {\n    let copy = [...toDos];\n    const keyId = count + 1 + title.replace(/[^a-zA-Z0-9]/g, '');\n    copy = [...copy, {\n      id: keyId,\n      content: itemContent,\n      complete: false\n    }];\n    setToDos(copy);\n    setCount(count + 1);\n  };\n\n  const updateItem = ({\n    userContent\n  }) => {\n    let copy = [...toDos];\n    const keyId = count + 1 + title.replace(/[^a-zA-Z0-9]/g, '');\n    copy = [...copy, {\n      id: keyId,\n      content: userContent,\n      complete: false\n    }];\n    setToDos(copy);\n    setCount(count + 1);\n  };\n\n  const InputForm = () => {\n    _s();\n\n    const [inputValue, setInputValue] = useState('');\n\n    const handleChange = e => {\n      setInputValue(e.currentTarget.value);\n    };\n\n    const handleSubmit = e => {\n      e.preventDefault(); // console.log(e.currentTarget.parentNode.id, e.currentTarget.parentNode.content, inputValue);\n      // setItemContent(inputValue);\n\n      return updateItem(inputValue);\n    };\n\n    return /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        value: inputValue,\n        type: \"text\",\n        onChange: handleChange,\n        placeholder: \"Your ToDo...\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this);\n  };\n\n  _s(InputForm, \"wygnup2PVWbIJtjIVtSrCaEglLA=\");\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"checklist\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"title\",\n      children: [title, \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"counter\",\n        children: [count, \" von \", maxCount]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"list\",\n      children: toDos.map(item => {\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          id: item.id,\n          className: \"item\",\n          children: [item.content ? /*#__PURE__*/_jsxDEV(\"div\", {\n            onClick: handleToggle,\n            className: item.complete ? 'done' : '',\n            children: item.content\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 31\n          }, this) : /*#__PURE__*/_jsxDEV(InputForm, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 122\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            onClick: handleDeletion,\n            className: \"delete\",\n            children: \"\\u2717\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 15\n          }, this)]\n        }, item.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), count < maxCount && /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: addItem,\n      children: \"+\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 5\n  }, this);\n};\n\n_s2(Checklist, \"VQZsDCVdfc7rXreL6S5nXXWp/mA=\");\n\n_c = Checklist;\nexport default Checklist;\n\nvar _c;\n\n$RefreshReg$(_c, \"Checklist\");","map":{"version":3,"sources":["/Users/Anne/Documents/playground/dashboard/src/Checklist/Checklist.js"],"names":["React","useEffect","useState","data","Checklist","title","maxCount","toDos","setToDos","count","setCount","length","counter","cleanup","clearInterval","handleToggle","e","preventDefault","mapped","map","item","id","currentTarget","parentNode","complete","handleDeletion","filteredList","filter","itemContent","setItemContent","addItem","copy","keyId","replace","content","updateItem","userContent","InputForm","inputValue","setInputValue","handleChange","value","handleSubmit"],"mappings":"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","sourcesContent":["import './Checklist.css';\n\nimport React, {useEffect, useState} from 'react';\n\nimport data from \"./data.json\";\n\nconst Checklist = ({title, maxCount}) => {\n  const [toDos, setToDos] = useState(data);\n  const [count, setCount] = useState(toDos.length);\n\n  useEffect(() => {\n    let counter = setCount(toDos.length);\n\n    return function cleanup() {\n      clearInterval(counter);\n    };\n  }, []);\n\n  const handleToggle = (e) => {\n      e.preventDefault()\n\n      let mapped = toDos.map(item => {\n        return (item.id == (e.currentTarget.parentNode.id) ? { ...item, complete: !item.complete } : { ...item});\n      });\n      setToDos(mapped);\n  }\n\n  const handleDeletion = (e) => {\n      e.preventDefault()\n\n      let filteredList = toDos.filter(item => {\n        return (item.id != e.currentTarget.parentNode.id);\n      });\n      setToDos(filteredList);\n      setCount(count - 1);\n  }\n\n  const [ itemContent, setItemContent ] = useState(null);\n\n  const addItem = () => {\n    let copy = [...toDos];\n    const keyId = ((count + 1) + title.replace(/[^a-zA-Z0-9]/g,''));\n    copy = [...copy, { id: keyId, content: itemContent, complete: false }];\n    setToDos(copy);\n    setCount(count + 1);\n  }\n\n  const updateItem = ({userContent}) => {\n    let copy = [...toDos];\n    const keyId = ((count + 1) + title.replace(/[^a-zA-Z0-9]/g,''));\n    copy = [...copy, { id: keyId, content: userContent, complete: false }];\n    setToDos(copy);\n    setCount(count + 1);\n  }\n\n  const InputForm = () => {\n    const [ inputValue, setInputValue ] = useState('');\n\n    const handleChange = (e) => {\n      setInputValue(e.currentTarget.value);\n    }\n\n    const handleSubmit = (e) => {\n      e.preventDefault();\n      // console.log(e.currentTarget.parentNode.id, e.currentTarget.parentNode.content, inputValue);\n      // setItemContent(inputValue);\n      return updateItem(inputValue);\n    }\n\n    return (\n      <form onSubmit={handleSubmit}>\n          <input value={inputValue} type=\"text\" onChange={handleChange} placeholder=\"Your ToDo...\" required/>\n      </form>\n    )\n  }\n\n  return (\n    <div className=\"checklist\">\n      <h2 className=\"title\">\n        {title} <span className=\"counter\">{count} von {maxCount}</span>\n      </h2>\n      <ul className=\"list\">\n        {toDos.map((item) => {\n          return (\n            <li key={item.id} id={item.id} className=\"item\">\n              {item.content ? <div onClick={handleToggle} className={item.complete ? 'done' : ''}>{item.content}</div> : <InputForm/> }\n              <span onClick={handleDeletion} className=\"delete\">✗</span>\n            </li>\n            )\n          })}\n      </ul>\n      {count < maxCount &&\n        <button onClick={addItem}>+</button>\n      } \n    </div>\n  );\n}\n\nexport default Checklist;\n"]},"metadata":{},"sourceType":"module"}