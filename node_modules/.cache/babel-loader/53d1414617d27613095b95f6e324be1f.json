{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/Anne/Documents/playground/dashboard/src/Clock.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\n\nconst Clock = () => {\n  _s();\n\n  const [date, setDate] = useState(new Date());\n  const options = {\n    weekday: 'long',\n    year: 'numeric',\n    month: 'long',\n    day: 'numeric'\n  };\n  useEffect(() => {\n    let timer = setInterval(() => tick(), 1000);\n    return function cleanup() {\n      clearInterval(timer);\n    };\n  });\n\n  function tick() {\n    setDate(new Date());\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"clock\",\n      children: date.toLocaleTimeString()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"date\",\n      children: date.toLocaleString('de-DE', options)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Clock, \"Gqi45WOZhU2c0BLYX0HoJeiR0fk=\");\n\n_c = Clock;\nexport default Clock;\n{\n  /* Notes:\n    useEffect\n   > Replaces componentDidMount and componentWillUnmount\n    setInterval()\n   > https://developer.mozilla.org/en-US/docs/Web/API/WindowOrWorkerGlobalScope/setInterval\n    clearInterval()\n   > https://developer.mozilla.org/en-US/docs/Web/API/WindowOrWorkerGlobalScope/clearInterval\n    toLocaleTimeString()\n   > https://developer.mozilla.org/de/docs/Web/JavaScript/Reference/Global_Objects/Date/toLocaleTimeString\n  */\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"Clock\");","map":{"version":3,"sources":["/Users/Anne/Documents/playground/dashboard/src/Clock.js"],"names":["useEffect","useState","Clock","date","setDate","Date","options","weekday","year","month","day","timer","setInterval","tick","cleanup","clearInterval","toLocaleTimeString","toLocaleString"],"mappings":";;;;;;AAAA,SAAQA,SAAR,EAAmBC,QAAnB,QAAkC,OAAlC;;AAEA,MAAMC,KAAK,GAAG,MAAM;AAAA;;AAClB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBH,QAAQ,CAAC,IAAII,IAAJ,EAAD,CAAhC;AACA,QAAMC,OAAO,GAAG;AAAEC,IAAAA,OAAO,EAAE,MAAX;AAAmBC,IAAAA,IAAI,EAAE,SAAzB;AAAoCC,IAAAA,KAAK,EAAE,MAA3C;AAAmDC,IAAAA,GAAG,EAAE;AAAxD,GAAhB;AAEAV,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIW,KAAK,GAAGC,WAAW,CAAE,MAAMC,IAAI,EAAZ,EAAgB,IAAhB,CAAvB;AAEA,WAAO,SAASC,OAAT,GAAmB;AACxBC,MAAAA,aAAa,CAACJ,KAAD,CAAb;AACD,KAFD;AAGD,GANQ,CAAT;;AAQA,WAASE,IAAT,GAAgB;AACdT,IAAAA,OAAO,CAAC,IAAIC,IAAJ,EAAD,CAAP;AACD;;AAED,sBACE;AAAA,4BACE;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA,gBACGF,IAAI,CAACa,kBAAL;AADH;AAAA;AAAA;AAAA;AAAA,YADF,eAIE;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA,gBACGb,IAAI,CAACc,cAAL,CAAoB,OAApB,EAA6BX,OAA7B;AADH;AAAA;AAAA;AAAA;AAAA,YAJF;AAAA,kBADF;AAUD,CA1BD;;GAAMJ,K;;KAAAA,K;AA4BN,eAAeA,KAAf;AAEA;AAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAKG","sourcesContent":["import {useEffect, useState} from \"react\";\n\nconst Clock = () => {\n  const [date, setDate] = useState(new Date());\n  const options = { weekday: 'long', year: 'numeric', month: 'long', day: 'numeric' };\n\n  useEffect(() => {\n    let timer = setInterval( () => tick(), 1000 );\n\n    return function cleanup() {\n      clearInterval(timer);\n    };\n  });\n\n  function tick() {\n    setDate(new Date());\n  }\n\n  return (\n    <>\n      <div className=\"clock\">\n        {date.toLocaleTimeString()}\n      </div>\n      <div className=\"date\">\n        {date.toLocaleString('de-DE', options)}\n      </div>\n    </>\n  );\n}\n\nexport default Clock;\n\n{/* Notes:\n\n  useEffect\n  > Replaces componentDidMount and componentWillUnmount\n\n  setInterval()\n  > https://developer.mozilla.org/en-US/docs/Web/API/WindowOrWorkerGlobalScope/setInterval\n\n  clearInterval()\n  > https://developer.mozilla.org/en-US/docs/Web/API/WindowOrWorkerGlobalScope/clearInterval\n\n  toLocaleTimeString()\n  > https://developer.mozilla.org/de/docs/Web/JavaScript/Reference/Global_Objects/Date/toLocaleTimeString\n\n*/}"]},"metadata":{},"sourceType":"module"}