{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/Anne/Documents/playground/dashboard/src/ChecklistNew.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport './Checklist.css';\nimport React, { useEffect, useState } from 'react';\nimport data from \"./data.json\"; //\n// Item.jsx\n//\n\nconst Item = ({\n  item,\n  handleDeletion\n}) => {\n  _s();\n\n  // const [itemValue, setItemValue] = useState(\"\");\n  // const [isConfirmed, setConfirm] = useState(false);\n  const [done, setDone] = useState(false); // const handleChange = (e) => {\n  //   setItemValue(e.target.value);\n  // };\n  // const handleSubmit = (e) => {\n  //   e.preventDefault();\n  //   setConfirm(!isConfirmed);\n  // }\n\n  const toggleState = () => {\n    setDone(!done);\n  };\n\n  const handleMyClick = e => {\n    e.preventDefault();\n    handleDeletion(e.currentTarget.parentNode.id);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"li\", {\n    id: item.id,\n    className: \"item\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      onClick: toggleState,\n      className: done ? 'done' : '',\n      children: item.content\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      onClick: handleMyClick,\n      className: \"delete\",\n      children: \"\\u2717\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n}; //\n// Counter.jsx\n//\n\n\n_s(Item, \"0mz8s7cWzSmcGyoUdgXTliy2Hjc=\");\n\n_c = Item;\n\nconst Counter = ({\n  count,\n  maxCount\n}) => /*#__PURE__*/_jsxDEV(\"span\", {\n  className: \"counter\",\n  children: `${count} von ${maxCount}`\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 60,\n  columnNumber: 3\n}, this); //\n// ChecklistNew.jsx\n//\n\n\n_c2 = Counter;\n\nconst ChecklistNew = ({\n  title,\n  maxCount\n}) => {\n  _s2();\n\n  const [items, setItem] = useState(data);\n\n  const addItem = newItem => {\n    setItem([...items, newItem]);\n  };\n\n  const handleDeletion = id => {\n    let updateList = items.filter(item => item.id !== id);\n    setItem([updateList]);\n    console.log([updateList]);\n  };\n\n  const [count, setCount] = useState(items.length);\n  useEffect(() => {\n    let counter = setCount(items.length);\n    return function cleanup() {\n      clearInterval(counter);\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"checklist\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"title\",\n      children: [title, \" \", /*#__PURE__*/_jsxDEV(Counter, {\n        count: count,\n        maxCount: maxCount\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"list\",\n      children: items.map(item => {\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          id: item.id,\n          className: \"item\",\n          item: item,\n          handleDeletion: handleDeletion,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            onClick: toggleState,\n            className: done ? 'done' : '',\n            children: item.content\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            onClick: handleMyClick,\n            className: \"delete\",\n            children: \"\\u2717\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 17\n          }, this)]\n        }, item.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 15\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 9\n    }, this), count < maxCount && /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: addItem,\n      children: \"+\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 5\n  }, this);\n};\n\n_s2(ChecklistNew, \"PAu5SfLmitiHXsK78TVNGtfwsrI=\");\n\n_c3 = ChecklistNew;\nexport default ChecklistNew;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Item\");\n$RefreshReg$(_c2, \"Counter\");\n$RefreshReg$(_c3, \"ChecklistNew\");","map":{"version":3,"sources":["/Users/Anne/Documents/playground/dashboard/src/ChecklistNew.js"],"names":["React","useEffect","useState","data","Item","item","handleDeletion","done","setDone","toggleState","handleMyClick","e","preventDefault","currentTarget","parentNode","id","content","Counter","count","maxCount","ChecklistNew","title","items","setItem","addItem","newItem","updateList","filter","console","log","setCount","length","counter","cleanup","clearInterval","map"],"mappings":"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","sourcesContent":["import './Checklist.css';\n\nimport React, {useEffect, useState} from 'react';\n\nimport data from \"./data.json\";\n\n\n//\n// Item.jsx\n//\nconst Item = ({item, handleDeletion}) => {\n  // const [itemValue, setItemValue] = useState(\"\");\n  // const [isConfirmed, setConfirm] = useState(false);\n  const [done, setDone] = useState(false);\n\n  // const handleChange = (e) => {\n  //   setItemValue(e.target.value);\n  // };\n\n  // const handleSubmit = (e) => {\n  //   e.preventDefault();\n  //   setConfirm(!isConfirmed);\n  // }\n\n  const toggleState = () => {\n    setDone(!done);\n  }\n\n  const handleMyClick = (e) => {\n    e.preventDefault()\n    handleDeletion(e.currentTarget.parentNode.id)\n  }\n\n  return (\n    <li id={item.id} className=\"item\">\n      {/* !isConfirmed */}\n      {/* {(item.content.length < 0) ? ( \n        <form onSubmit={handleSubmit}>\n          <input \n            type=\"text\" \n            onChange={handleChange}\n            value={itemValue} \n            placeholder=\"Bezeichnung...\" \n            required\n          />\n        </form>\n      ) : ( \n        <div onClick={toggleState} className={done ? 'done' : ''}>{itemValue}</div>\n      )} */}\n      <div onClick={toggleState} className={done ? 'done' : ''}>{item.content}</div>\n      <span onClick={handleMyClick} className=\"delete\">âœ—</span>\n    </li>\n  );\n}\n\n//\n// Counter.jsx\n//\nconst Counter = ({count, maxCount}) => (\n  <span className=\"counter\">{`${count} von ${maxCount}`}</span>\n)\n\n//\n// ChecklistNew.jsx\n//\nconst ChecklistNew = ({title, maxCount}) => {\n  const [items, setItem] = useState(data);\n\n  const addItem = (newItem) => {\n    setItem([...items, newItem]);\n  }\n\n  const handleDeletion = (id) => {\n    let updateList = items.filter((item) => item.id !== id);\n    setItem([updateList]);\n    console.log([updateList]);\n  }\n\n  const [count, setCount] = useState(items.length);\n\n  useEffect(() => {\n    let counter = setCount(items.length);\n\n    return function cleanup() {\n      clearInterval(counter);\n    };\n  }, []);\n\n  return (\n    <div className=\"checklist\">\n      <h2 className=\"title\">\n        {title} <Counter count={count} maxCount={maxCount}/>\n      </h2>\n\n        <ul className=\"list\">\n\n          {items.map((item) => {\n            return (\n              <li key={item.id} id={item.id} className=\"item\" item={item} handleDeletion={handleDeletion}>\n                <div onClick={toggleState} className={done ? 'done' : ''}>{item.content}</div>\n                <span onClick={handleMyClick} className=\"delete\">âœ—</span>\n              </li>\n              )\n            })}\n            \n        </ul>\n\n\n      {count < maxCount &&\n        <button onClick={addItem}>+</button>\n      } \n    </div>\n  );\n}\n\nexport default ChecklistNew;\n"]},"metadata":{},"sourceType":"module"}