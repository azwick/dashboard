{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/Anne/Documents/playground/dashboard/src/Checklist.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport './Checklist.css';\nimport React, { useState } from 'react'; //\n// List.js\n//\n\nconst List = props => /*#__PURE__*/_jsxDEV(\"ul\", {\n  className: \"list\",\n  children: props.items.map((item, index) => /*#__PURE__*/_jsxDEV(Item, {\n    onClick: props.handleRemove,\n    ...item\n  }, index, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 39\n  }, this))\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 9,\n  columnNumber: 3\n}, this); //\n// Item.jsx\n//\n\n\n_c = List;\n\nconst Item = props => {\n  _s();\n\n  const [itemValue, setItemValue] = useState(\"\");\n  const [isConfirmed, setConfirm] = useState(false);\n  const [done, setDone] = useState(false);\n\n  const handleChange = e => {\n    setItemValue(e.target.value);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    setConfirm(!isConfirmed);\n  };\n\n  const toggleState = () => {\n    setDone(!done);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"li\", {\n    className: \"item\",\n    children: [!isConfirmed ? /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        onChange: handleChange,\n        value: itemValue,\n        placeholder: \"Bezeichnung...\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      onClick: toggleState,\n      className: done ? 'done' : '',\n      children: itemValue\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      onClick: props.handleRemove,\n      className: \"delete\",\n      children: \"\\u2717\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 6\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n}; //\n// Counter.jsx\n//\n\n\n_s(Item, \"9zyHo+fqMw5/csDIC62sbLRFWsI=\");\n\n_c2 = Item;\n\nconst Counter = ({\n  count,\n  maxCount\n}) => /*#__PURE__*/_jsxDEV(\"span\", {\n  className: \"counter\",\n  children: `${count} von ${maxCount}`\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 59,\n  columnNumber: 3\n}, this); //\n// Checklist.jsx\n//\n\n\n_c3 = Counter;\n\nconst Checklist = ({\n  title,\n  maxCount\n}) => {\n  _s2();\n\n  const [items, setItem] = useState([]);\n  const [count, setCount] = useState(0); // const [list, setList] = useState(items);\n\n  const addItem = newItem => {\n    setItem([...items, newItem]);\n    setCount(count + 1);\n  };\n\n  const handleRemove = el => {\n    // const updateList = list.filter((item) => item.el !== el);\n    // setList(updateList);\n    // console.log(`My test ${items}`);\n    setCount(count - 1);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"checklist\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"title\",\n      children: [title, \" \", /*#__PURE__*/_jsxDEV(Counter, {\n        count: count,\n        maxCount: maxCount\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(List, {\n      onClick: handleRemove,\n      items: items\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this), count < maxCount && /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: addItem,\n      children: \"+\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 5\n  }, this);\n};\n\n_s2(Checklist, \"aQ/484Y0hUHc1o8eH0KhEubPKxs=\");\n\n_c4 = Checklist;\nexport default Checklist;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"List\");\n$RefreshReg$(_c2, \"Item\");\n$RefreshReg$(_c3, \"Counter\");\n$RefreshReg$(_c4, \"Checklist\");","map":{"version":3,"sources":["/Users/Anne/Documents/playground/dashboard/src/Checklist.js"],"names":["React","useState","List","props","items","map","item","index","handleRemove","Item","itemValue","setItemValue","isConfirmed","setConfirm","done","setDone","handleChange","e","target","value","handleSubmit","preventDefault","toggleState","Counter","count","maxCount","Checklist","title","setItem","setCount","addItem","newItem","el"],"mappings":"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","sourcesContent":["import './Checklist.css';\n\nimport React, {useState} from 'react';\n\n//\n// List.js\n//\nconst List = (props) => (\n  <ul className=\"list\">\n    {props.items.map((item, index) => <Item key={index} onClick={props.handleRemove} {...item} />)}\n  </ul>\n);\n\n//\n// Item.jsx\n//\nconst Item = (props) => {\n  const [itemValue, setItemValue] = useState(\"\");\n  const [isConfirmed, setConfirm] = useState(false);\n  const [done, setDone] = useState(false);\n\n  const handleChange = (e) => {\n    setItemValue(e.target.value);\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    setConfirm(!isConfirmed);\n  }\n\n  const toggleState = () => {\n    setDone(!done);\n  }\n\n  return (\n    <li className=\"item\">\n      {!isConfirmed ? ( \n        <form onSubmit={handleSubmit}>\n          <input \n            type=\"text\" \n            onChange={handleChange}\n            value={itemValue} \n            placeholder=\"Bezeichnung...\" \n            required\n          />\n        </form>\n      ) : (\n        <div onClick={toggleState} className={done ? 'done' : ''}>{itemValue}</div>\n      )}\n     <span onClick={props.handleRemove} className=\"delete\">âœ—</span>\n    </li>\n  );\n}\n\n//\n// Counter.jsx\n//\nconst Counter = ({count, maxCount}) => (\n  <span className=\"counter\">{`${count} von ${maxCount}`}</span>\n)\n\n//\n// Checklist.jsx\n//\nconst Checklist = ({title, maxCount}) => {\n  const [items, setItem] = useState([]);\n  const [count, setCount] = useState(0);\n  // const [list, setList] = useState(items);\n\n  const addItem = (newItem) => {\n    setItem([...items, newItem]);\n    setCount(count + 1);\n  }\n\n  const handleRemove = (el) => {\n    // const updateList = list.filter((item) => item.el !== el);\n    // setList(updateList);\n\n    // console.log(`My test ${items}`);\n    setCount(count - 1);\n  }\n\n  return (\n    <div className=\"checklist\">\n      <h2 className=\"title\">\n        {title} <Counter count={count} maxCount={maxCount}/>\n      </h2>\n      <List onClick={handleRemove} items={items}/>\n      {count < maxCount &&\n        <button onClick={addItem}>+</button>\n      }\n    </div>\n  );\n}\n\nexport default Checklist"]},"metadata":{},"sourceType":"module"}