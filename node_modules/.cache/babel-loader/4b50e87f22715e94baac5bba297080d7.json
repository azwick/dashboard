{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/Anne/Documents/playground/dashboard/src/Checklist.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport './Checklist.css';\nimport React, { useState } from 'react';\nimport data from \"./data.json\"; //\n// List.js\n//\n\nconst List = ({\n  items,\n  handleDeletion\n}) => /*#__PURE__*/_jsxDEV(\"ul\", {\n  className: \"list\",\n  children: items.map(item => /*#__PURE__*/_jsxDEV(Item, {\n    item: item,\n    id: item.id,\n    handleDeletion: handleDeletion\n  }, item.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 26\n  }, this))\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 11,\n  columnNumber: 3\n}, this); //\n// Item.jsx\n//\n\n\n_c = List;\n\nconst Item = ({\n  item,\n  handleDeletion\n}) => {\n  _s();\n\n  const [itemValue, setItemValue] = useState(\"\");\n  const [isConfirmed, setConfirm] = useState(false);\n  const [done, setDone] = useState(false);\n\n  const handleChange = e => {\n    setItemValue(e.target.value);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    setConfirm(!isConfirmed);\n  };\n\n  const toggleState = () => {\n    setDone(!done);\n  };\n\n  const handleMyClick = e => {\n    e.preventDefault();\n    handleDeletion(e.currentTarget.id);\n    console.log(e.currentTarget);\n    console.log(e.currentTarget.ide);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"li\", {\n    className: \"item\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      onClick: toggleState,\n      className: done ? 'done' : '',\n      children: item.content\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      id: item.id,\n      onClick: handleMyClick,\n      className: \"delete\",\n      children: \"\\u2717\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n}; //\n// Counter.jsx\n//\n\n\n_s(Item, \"9zyHo+fqMw5/csDIC62sbLRFWsI=\");\n\n_c2 = Item;\n\nconst Counter = ({\n  count,\n  maxCount\n}) => /*#__PURE__*/_jsxDEV(\"span\", {\n  className: \"counter\",\n  children: `${count} von ${maxCount}`\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 70,\n  columnNumber: 3\n}, this); //\n// Checklist.jsx\n//\n\n\n_c3 = Counter;\n\nconst Checklist = ({\n  title,\n  maxCount\n}) => {\n  _s2();\n\n  const [items, setItem] = useState(data);\n  const [count, setCount] = useState(items.length);\n\n  const addItem = newItem => {\n    setItem([...items, newItem]);\n    setCount(count + 1);\n  };\n\n  const handleDeletion = el => {\n    // const updateList = items.filter((item) => item.el !== el);  // ToDo: I'm not sure what to write here to make it work...\n    // setItem([updateList]);\n    // console.log([updateList]);\n    setCount(count - 1);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"checklist\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"title\",\n      children: [title, \" \", /*#__PURE__*/_jsxDEV(Counter, {\n        count: count,\n        maxCount: maxCount\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(List, {\n      handleDeletion: handleDeletion,\n      items: items\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this), count < maxCount && /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: addItem,\n      children: \"+\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 5\n  }, this);\n};\n\n_s2(Checklist, \"N/pZwcs8VVNvpWy72mAZFED9Ipw=\");\n\n_c4 = Checklist;\nexport default Checklist;\n/*\nFurther ideas for ToDos:\n-> Save the checklist items in the localStorage\n-> Focus the input field of a created item\n-> Make items draggable for changing the position (only inside of their own list)\n*/\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"List\");\n$RefreshReg$(_c2, \"Item\");\n$RefreshReg$(_c3, \"Counter\");\n$RefreshReg$(_c4, \"Checklist\");","map":{"version":3,"sources":["/Users/Anne/Documents/playground/dashboard/src/Checklist.js"],"names":["React","useState","data","List","items","handleDeletion","map","item","id","Item","itemValue","setItemValue","isConfirmed","setConfirm","done","setDone","handleChange","e","target","value","handleSubmit","preventDefault","toggleState","handleMyClick","currentTarget","console","log","ide","content","Counter","count","maxCount","Checklist","title","setItem","setCount","length","addItem","newItem","el"],"mappings":"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","sourcesContent":["import './Checklist.css';\n\nimport React, {useState} from 'react';\n\nimport data from \"./data.json\";\n\n//\n// List.js\n//\nconst List = ({items, handleDeletion}) => (\n  <ul className=\"list\">\n    {items.map((item) => <Item key={item.id} item={item} id={item.id} handleDeletion={handleDeletion} />)}\n  </ul>\n);\n\n//\n// Item.jsx\n//\nconst Item = ({item, handleDeletion}) => {\n  const [itemValue, setItemValue] = useState(\"\");\n  const [isConfirmed, setConfirm] = useState(false);\n  const [done, setDone] = useState(false);\n\n  const handleChange = (e) => {\n    setItemValue(e.target.value);\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    setConfirm(!isConfirmed);\n  }\n\n  const toggleState = () => {\n    setDone(!done);\n  }\n\n  const handleMyClick = (e) => {\n    e.preventDefault()\n    handleDeletion(e.currentTarget.id)\n    console.log(e.currentTarget)\n    console.log(e.currentTarget.ide)\n  }\n\n  return (\n    <li className=\"item\">\n      {/* !isConfirmed */}\n      {/* {(item.content.length < 0) ? ( \n        <form onSubmit={handleSubmit}>\n          <input \n            type=\"text\" \n            onChange={handleChange}\n            value={itemValue} \n            placeholder=\"Bezeichnung...\" \n            required\n          />\n        </form>\n      ) : ( \n        <div onClick={toggleState} className={done ? 'done' : ''}>{itemValue}</div>\n      )} */}\n      <div onClick={toggleState} className={done ? 'done' : ''}>{item.content}</div>\n      <span id={item.id} onClick={handleMyClick} className=\"delete\">âœ—</span>\n    </li>\n  );\n}\n\n//\n// Counter.jsx\n//\nconst Counter = ({count, maxCount}) => (\n  <span className=\"counter\">{`${count} von ${maxCount}`}</span>\n)\n\n//\n// Checklist.jsx\n//\nconst Checklist = ({title, maxCount}) => {\n  const [items, setItem] = useState(data);\n  const [count, setCount] = useState(items.length);\n\n  const addItem = (newItem) => {\n    setItem([...items, newItem]);\n    setCount(count + 1);\n  }\n\n  const handleDeletion = (el) => {\n    // const updateList = items.filter((item) => item.el !== el);  // ToDo: I'm not sure what to write here to make it work...\n    // setItem([updateList]);\n    // console.log([updateList]);\n\n    setCount(count - 1);\n  }\n\n  return (\n    <div className=\"checklist\">\n      <h2 className=\"title\">\n        {title} <Counter count={count} maxCount={maxCount}/>\n      </h2>\n      <List handleDeletion={handleDeletion} items={items}/>\n      {count < maxCount &&\n        <button onClick={addItem}>+</button>\n      }\n    </div>\n  );\n}\n\nexport default Checklist;\n\n/*\nFurther ideas for ToDos:\n-> Save the checklist items in the localStorage\n-> Focus the input field of a created item\n-> Make items draggable for changing the position (only inside of their own list)\n*/"]},"metadata":{},"sourceType":"module"}